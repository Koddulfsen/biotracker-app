version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: biotracker-db
    environment:
      POSTGRES_USER: biotracker
      POSTGRES_PASSWORD: biotracker123
      POSTGRES_DB: biotracker
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/DATABASE_SCHEMA.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./backend/scripts/add-profile-fields.sql:/docker-entrypoint-initdb.d/02-add-profile-fields.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U biotracker"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: biotracker-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: biotracker-api
    ports:
      - "4000:4000"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://biotracker:biotracker123@postgres:5432/biotracker
      REDIS_URL: redis://redis:6379
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: biotracker-frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:4000/api/v1
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    depends_on:
      - backend
    command: npm start

volumes:
  postgres_data:
  redis_data: